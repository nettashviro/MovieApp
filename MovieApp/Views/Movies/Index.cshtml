@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<MovieApp.Models.Movie>

@{
    ViewData["Title"] = "מאגר הסרטים";
}

<!-- CSS -->
<link type="text/css" href="~/css/moviesIndex.css?v=1.2.0" rel="stylesheet" asp-append-version="true">

@{ string userType = @Context.User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.Role)?.Value;}
<h1>מאגר הסרטים</h1>

<form asp-controller="Movies" asp-action="Index" method="get">
    <p>
        <div class="form-group row">
            <label class="col-sm-1 col-form-label col-form-label-sm">ז'אנר:</label>

            <div class="col-sm-5">
                <select asp-items="Html.GetEnumSelectList<Movie.MovieGenre>()" name="genreFilter" class="form-control form-control-sm">
                    <option value="">הכל</option>
                </select>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-1 col-form-label col-form-label-sm">שם הסרט:</label>
            <div class="col-sm-5">
                <input type="text" name="nameFilter" class="form-control form-control-sm" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-1 col-form-label col-form-label-sm">שפה:</label>

            <div class="col-sm-5">
                <select asp-items="@(new SelectList(ViewBag.Languages, "Value", "Text"))" name="languageFilter" class="form-control form-control-sm">
                    <option value="">הכל</option>
                </select>
            </div>
        </div>
        <input type="submit" value="חפש סרט" class="btn btn-primary" />
    </p>
</form>

<div class="card shadow">

    <div class="table-responsive">
        <table class="table align-items-center table-flush">
            <thead class="thead-light">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Image)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Country)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Language)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Year)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Genre)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Duration)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().TrailerUrl)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Rating)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().MovieIdInTMDB)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <img src="@("/img/movies/"+ item.ImageUrl)" width="30" height="30">
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Country)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Language)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Year)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Genre)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Duration)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TrailerUrl)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Rating)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MovieIdInTMDB)
                        </td>
                        <td>
                            <a class="btn btn-secondary btn-sm fa fa-info-circle mr-3" asp-action="Details" asp-route-id="@item.Id"></a>
                            <a class="btn btn-secondary btn-sm fa fa-edit mr-3" asp-action="Edit" asp-route-id="@item.Id"></a>

                            @if (userType == Account.UserType.Admin.ToString())
                            {
                                <a class="btn btn-secondary btn-sm fa fa-trash mr-3" asp-action="Delete" asp-route-id="@item.Id"></a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="pagination" style="margin-left: 400px">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
    </div>
</div>

<p>
    <a class="btn btn-danger" asp-action="Create">צור חדש</a>
</p>
