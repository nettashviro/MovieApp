@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<MovieApp.Models.Movie>

@{ ViewData["Title"] = "מאגר הסרטים"; }

@{ var account = ViewData["account"] as Account;}

<!-- CSS -->
<link type="text/css" href="~/css/moviesIndex.css?v=1.2.0" rel="stylesheet" asp-append-version="true">

<!-- Scripts -->
<script src="~/vendor/jquery/dist/jquery.min.js" asp-append-version="true"></script>

<script type='text/javascript'>
    var genreFilter = @Json.Serialize(ViewBag.CurrentGenreFilter);
    if (genreFilter != null) {
        $(function () {
            $('#genre-filter').val(genreFilter);
        });
    }
    var languageFilter = @Json.Serialize(ViewBag.CurrentLanguageFilter);
    if (languageFilter != null) {
        $(function () {
            $('#language-filter').val(languageFilter);
        });
    }
</script>

<div class="card shadow p-5">
    <h1 class="display-4" dir="rtl">
        מאגר הסרטים
        <a class="btn btn-outline-light float-left" asp-action="Create"><i class="fas fa-plus"></i></a>
        <a class="btn btn-outline-light float-left" data-toggle="modal" data-target="#filters">
            <i class="fas fa-filter"></i>
        </a>

        <!-- Modal -->
        <div class="modal fade" id="filters" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="btn btn-sm" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form asp-controller="Movies" asp-action="Index" method="get">
                            <div class="form-group row">
                                <p class="col-sm-3">שם הסרט:</p>
                                <div class="col">
                                    <input type="text" name="nameFilter" class="form-control form-control-sm" value="@(ViewBag.CurrentNameFilter as string)" />
                                </div>
                            </div>
                            <div class="form-group row">
                                <p class="col-sm-3">סוגה:</p>
                                <div class="col">
                                    <select id="genre-filter" asp-items="Html.GetEnumSelectList<Movie.MovieGenre>()" name="genreFilter" class="form-control form-control-sm">
                                        <option value="">הכל</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group row">
                                <p class="col-sm-3">שפה:</p>
                                <div class="col">
                                    <select id="language-filter" asp-items="@(new SelectList(ViewBag.Languages, "Value", "Text"))" name="languageFilter" class="form-control form-control-sm">
                                        <option value="">הכל</option>
                                    </select>
                                </div>
                            </div>
                            <input type="submit" value="חפש סרט" class="btn btn-danger" />
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </h1>

    <hr class="my-4">

    <div class="container">
        <div class="row row-cols-4">
            @foreach (var item in Model)
            {
                <div class="col mb-4">
                    <div id="card-movie" class="card h-100">
                        <img class="embed-responsive-item rounded" src="@(item.ImageUrl)" alt="movie poster">
                        <div class="card-img-overlay hoverOverlay bg-dark text-white rounded">
                            <h2 class="card-title">
                                <a asp-action="Details" asp-route-id="@item.Id" class="card-link">
                                    @Html.DisplayFor(modelItem => item.Name)
                                </a>
                            </h2>
                            <h3 class="card-subtitle text-muted">@Html.DisplayFor(modelItem => item.Genre)</h3>
                            <span class="rating"><strong>@Html.DisplayFor(modelItem => item.Rating)</strong>/10 <i class="fas fa-star rotate"></i></span>

                            @if (!String.IsNullOrEmpty(item.TrailerUrl))
                            {
                                <!-- Button trigger modal -->
                                <a class="btn btn-outline-danger rounded-circle align-middle play-button" data-toggle="modal" data-target="@("#trailer" + item.Id)">
                                    <i class="fas fa-play"></i>
                                </a>
                            }
                            <div class="movieActions mx-auto">
                                @{var isMovieAlreadyWatched = (account.MovieWatched != null) ? account.MovieWatched.FirstOrDefault(m => m.Id == item.Id) : null;}
                                @{string iconEye = (isMovieAlreadyWatched == null) ? "fa-eye" : "fa-eye-slash"; }
                                <form asp-action="@((isMovieAlreadyWatched == null)? "AddMovieWatched": "DeleteMovieWatched")" asp-route-id="@item.Id" asp-route-path="Index" method="post">
                                    <button type="submit" class="btn btn-outline-light btn-sm fa @iconEye"></button>
                                </form>
                                @{var isMovieAlreadyInWatchlist = (account.MovieWatchlist != null) ? account.MovieWatchlist.FirstOrDefault(m => m.Id == item.Id) : null;}
                                @{string iconPlus = (isMovieAlreadyInWatchlist == null) ? "fa-plus" : "fa-minus"; }
                                <form asp-action="@((isMovieAlreadyInWatchlist == null)? "AddMovieWatchlist": "DeleteMovieWatchlist")" asp-route-id="@item.Id" asp-route-path="Index" method="post">
                                    <button type="submit" class="btn btn-outline-light btn-sm fa @iconPlus"></button>
                                </form>
                            </div>
                        </div>
                    </div>

                    <!-- Modal -->
                    <div class="modal fade" id="@("trailer" + item.Id)" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content bg-dark">
                                <div class="modal-header">
                                    <button type="button" class="btn btn-outline-light" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    @if (!String.IsNullOrEmpty(item.TrailerUrl))
                                    {
                                        <iframe width="420" height="315"
                                                src="@(item.TrailerUrl.Replace("watch?v=", "embed/"))">
                                        </iframe>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="pagination-container">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, currentNameFilter = ViewBag.CurrentNameFilter, currentGenreFilter = ViewBag.CurrentGenreFilter, currentLanguageFilter = ViewBag.CurrentLanguageFilter }))
    </div>

    @await Component.InvokeAsync("RecommendMovie")
</div>
